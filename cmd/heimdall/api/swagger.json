{
    "schemes": [
        "https"
    ],
    "swagger": "2.0",
    "info": {
        "description": "It is responsible for providing off chain account management for the ION Platform; it is the first layer of interaction between users and the platform.",
        "title": "User accounts management for ION",
        "contact": {
            "name": "ice.io",
            "url": "https://ice.io"
        },
        "version": "latest"
    },
    "paths": {
        "/auth/recover/user/delegated": {
            "post": {
                "description": "Initiates recovery process with dfns",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Recovery"
                ],
                "parameters": [
                    {
                        "description": "Request params",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/main.StartDelegatedRecoveryReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/main.StartDelegatedRecoveryResp"
                        }
                    },
                    "400": {
                        "description": "if invalid 2FA code is provided",
                        "schema": {
                            "$ref": "#/definitions/server.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "if 2FA required",
                        "schema": {
                            "$ref": "#/definitions/server.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/server.ErrorResponse"
                        }
                    },
                    "504": {
                        "description": "if request times out",
                        "schema": {
                            "$ref": "#/definitions/server.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v1/users/{userId}/2fa/{twoFAOption}/verification-requests": {
            "put": {
                "description": "Verifies 2FA code from the user",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "2FA"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID of the user",
                        "name": "userId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "type of 2fa (sms/email/google_authentificator)",
                        "name": "twoFAOption",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "code from second factor",
                        "name": "code",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/main.Verify2FARequestResp"
                        }
                    },
                    "400": {
                        "description": "if code is invalid or expired",
                        "schema": {
                            "$ref": "#/definitions/server.ErrorResponse"
                        }
                    },
                    "409": {
                        "description": "if there is no pending 2FA verification",
                        "schema": {
                            "$ref": "#/definitions/server.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/server.ErrorResponse"
                        }
                    },
                    "504": {
                        "description": "if request times out",
                        "schema": {
                            "$ref": "#/definitions/server.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Initiates sending of 2FA code to the user",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "2FA"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "default": "",
                        "description": "Language",
                        "name": "X-Language",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "ID of the user",
                        "name": "userId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "type of 2fa (sms/email/google_authentificator)",
                        "name": "twoFAOption",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Request params containing email or phone number to set up 2FA",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/main.Send2FARequestReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/main.Send2FARequestResp"
                        }
                    },
                    "400": {
                        "description": "if user's email / phone number is not provided",
                        "schema": {
                            "$ref": "#/definitions/server.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "if user already have 2FA set up, and it is requested for new email / phone",
                        "schema": {
                            "$ref": "#/definitions/server.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/server.ErrorResponse"
                        }
                    },
                    "504": {
                        "description": "if request times out",
                        "schema": {
                            "$ref": "#/definitions/server.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "main.Send2FARequestReq": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "phoneNumber": {
                    "type": "string"
                }
            }
        },
        "main.Send2FARequestResp": {
            "type": "object",
            "properties": {
                "TOTPAuthentificatorURL": {
                    "type": "string"
                }
            }
        },
        "main.StartDelegatedRecoveryReq": {
            "type": "object",
            "properties": {
                "2FAVerificationCodes": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "credentialId": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "main.StartDelegatedRecoveryResp": {
            "type": "object",
            "properties": {
                "allowedRecoveryCredentials": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "encryptedRecoveryKey": {
                                "type": "string"
                            },
                            "id": {
                                "type": "string"
                            }
                        }
                    }
                },
                "attestation": {
                    "type": "string"
                },
                "authenticatorSelection": {
                    "type": "object",
                    "properties": {
                        "authenticatorAttachment": {
                            "type": "string"
                        },
                        "requireResidentKey": {
                            "type": "boolean"
                        },
                        "residentKey": {
                            "type": "string"
                        },
                        "userVerification": {
                            "type": "string"
                        }
                    }
                },
                "challenge": {
                    "type": "string"
                },
                "excludeCredentials": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "id": {
                                "type": "string"
                            },
                            "transports": {
                                "type": "string"
                            },
                            "type": {
                                "type": "string"
                            }
                        }
                    }
                },
                "pubKeyCredParam": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "alg": {
                                "type": "integer"
                            },
                            "type": {
                                "type": "string"
                            }
                        }
                    }
                },
                "rp": {
                    "type": "object",
                    "properties": {
                        "id": {
                            "type": "string"
                        },
                        "name": {
                            "type": "string"
                        }
                    }
                },
                "supportedCredentialKinds": {
                    "type": "object",
                    "properties": {
                        "firstFactor": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "secondFactor": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                },
                "temporaryAuthenticationToken": {
                    "type": "string"
                },
                "user": {
                    "type": "object",
                    "properties": {
                        "displayName": {
                            "type": "string"
                        },
                        "id": {
                            "type": "string"
                        },
                        "name": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "main.Verify2FARequestResp": {
            "type": "object"
        },
        "server.ErrorResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string",
                    "example": "SOMETHING_NOT_FOUND"
                },
                "data": {
                    "type": "object",
                    "additionalProperties": {}
                },
                "error": {
                    "type": "string",
                    "example": "something is missing"
                }
            }
        }
    }
}